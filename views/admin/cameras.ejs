<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cameras Management - ANPR Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <%- include('../partials/header') %>

    <div class="container mt-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>Manage Cameras</h1>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCameraModal">
                <i class="bi bi-plus-lg"></i> Add Camera
            </button>
        </div>

        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Car Park</th>
                        <th>Entry Directions</th>
                        <th>Exit Directions</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% cameras.forEach(camera => { %>
                        <tr>
                            <td><%= camera.name %></td>
                            <td><%= camera.carParkName || 'Unassigned' %></td>
                            <td>
                                <% JSON.parse(camera.entryDirections).forEach((dir, index) => { %>
                                    <span class="badge bg-primary"><%= dir %></span>
                                    <%= index < JSON.parse(camera.entryDirections).length - 1 ? ' ' : '' %>
                                <% }); %>
                            </td>
                            <td>
                                <% JSON.parse(camera.exitDirections).forEach((dir, index) => { %>
                                    <span class="badge bg-secondary"><%= dir %></span>
                                    <%= index < JSON.parse(camera.exitDirections).length - 1 ? ' ' : '' %>
                                <% }); %>
                            </td>
                            <td>
                                <button class="btn btn-sm btn-outline-primary edit-camera" 
                                        data-camera='<%= JSON.stringify(camera) %>'>
                                    <i class="bi bi-pencil"></i>
                                </button>
                                <button class="btn btn-sm btn-outline-danger delete-camera" 
                                        data-id="<%= camera.id %>">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Add Camera Modal -->
    <div class="modal fade" id="addCameraModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Camera</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addCameraForm">
                        <div class="mb-3">
                            <label class="form-label">Name</label>
                            <input type="text" class="form-control" name="name" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Car Park</label>
                            <select class="form-select" name="carParkId">
                                <option value="">Select Car Park</option>
                                <% carParks.forEach(carPark => { %>
                                    <option value="<%= carPark.id %>"><%= carPark.name %></option>
                                <% }); %>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Camera Configuration</label>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="isEntryTrigger" id="isEntryTrigger">
                                <label class="form-check-label" for="isEntryTrigger">Entry Trigger</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="isExitTrigger" id="isExitTrigger">
                                <label class="form-check-label" for="isExitTrigger">Exit Trigger</label>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Direction</label>
                            <select class="form-select" name="direction" required>
                                <option value="in">In</option>
                                <option value="out">Out</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="saveCamera">Save</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Camera Modal -->
    <div class="modal fade" id="editCameraModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Camera</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="editCameraForm">
                        <input type="hidden" name="id">
                        <div class="mb-3">
                            <label class="form-label">Name</label>
                            <input type="text" class="form-control" name="name" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Car Park</label>
                            <select class="form-select" name="carParkId">
                                <option value="">Select Car Park</option>
                                <% carParks.forEach(carPark => { %>
                                    <option value="<%= carPark.id %>"><%= carPark.name %></option>
                                <% }); %>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Camera Configuration</label>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="isEntryTrigger" id="isEntryTrigger">
                                <label class="form-check-label" for="isEntryTrigger">Entry Trigger</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="isExitTrigger" id="isExitTrigger">
                                <label class="form-check-label" for="isExitTrigger">Exit Trigger</label>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Direction</label>
                            <select class="form-select" name="direction" required>
                                <option value="in">In</option>
                                <option value="out">Out</option>
                            </select>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="updateCamera">Update</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add Camera
            document.getElementById('saveCamera').addEventListener('click', async function() {
                const form = document.getElementById('addCameraForm');
                const formData = new FormData(form);
                
                const data = {
                    name: formData.get('name'),
                    carParkId: formData.get('carParkId') || null,
                    isEntryTrigger: formData.get('isEntryTrigger') === 'on',
                    isExitTrigger: formData.get('isExitTrigger') === 'on',
                    direction: formData.get('direction')
                };

                try {
                    const response = await fetch('/admin/api/cameras', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    });

                    if (response.ok) {
                        window.location.reload();
                    } else {
                        alert('Error creating camera');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error creating camera');
                }
            });

            // Edit Camera
            document.querySelectorAll('.edit-camera').forEach(button => {
                button.addEventListener('click', function() {
                    const camera = JSON.parse(this.dataset.camera);
                    const form = document.getElementById('editCameraForm');
                    
                    form.querySelector('[name="id"]').value = camera.id;
                    form.querySelector('[name="name"]').value = camera.name;
                    form.querySelector('[name="carParkId"]').value = camera.carParkId || '';
                    
                    // Reset checkboxes
                    form.querySelectorAll('[name="isEntryTrigger"]').forEach(checkbox => {
                        checkbox.checked = false;
                    });
                    form.querySelectorAll('[name="isExitTrigger"]').forEach(checkbox => {
                        checkbox.checked = false;
                    });
                    
                    // Set checkboxes based on stored values
                    form.querySelector('[name="isEntryTrigger"]').checked = camera.isEntryTrigger;
                    form.querySelector('[name="isExitTrigger"]').checked = camera.isExitTrigger;
                    
                    form.querySelector('[name="direction"]').value = camera.direction;
                    
                    new bootstrap.Modal(document.getElementById('editCameraModal')).show();
                });
            });

            // Update Camera
            document.getElementById('updateCamera').addEventListener('click', async function() {
                const form = document.getElementById('editCameraForm');
                const formData = new FormData(form);
                
                const data = {
                    name: formData.get('name'),
                    carParkId: formData.get('carParkId') || null,
                    isEntryTrigger: formData.get('isEntryTrigger') === 'on',
                    isExitTrigger: formData.get('isExitTrigger') === 'on',
                    direction: formData.get('direction')
                };

                try {
                    const response = await fetch(`/admin/api/cameras/${formData.get('id')}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    });

                    if (response.ok) {
                        window.location.reload();
                    } else {
                        alert('Error updating camera');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error updating camera');
                }
            });

            // Delete Camera
            document.querySelectorAll('.delete-camera').forEach(button => {
                button.addEventListener('click', async function() {
                    if (!confirm('Are you sure you want to delete this camera?')) {
                        return;
                    }

                    try {
                        const response = await fetch(`/admin/api/cameras/${this.dataset.id}`, {
                            method: 'DELETE'
                        });

                        if (response.ok) {
                            window.location.reload();
                        } else {
                            alert('Error deleting camera');
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        alert('Error deleting camera');
                    }
                });
            });
        });
    </script>

    <%- include('../partials/footer') %>
</body>
</html> 