<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Camera Management - ANPR Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        .camera-card {
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            margin-bottom: 1rem;
            background: white;
            transition: all 0.2s ease;
        }
        .camera-card:hover {
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        .camera-header {
            padding: 1rem;
            border-bottom: 1px solid #e0e0e0;
            background: #f8f9fa;
            border-radius: 8px 8px 0 0;
        }
        .camera-body {
            padding: 1rem;
        }
        .camera-actions {
            padding: 0.5rem 1rem;
            background: #f8f9fa;
            border-top: 1px solid #e0e0e0;
            border-radius: 0 0 8px 8px;
        }
        .site-section {
            background: #fff;
            border-radius: 12px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        }
        .site-header {
            border-bottom: 2px solid #e9ecef;
            margin-bottom: 1.5rem;
            padding-bottom: 0.5rem;
        }
        .direction-badge {
            font-size: 0.85rem;
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            background: #e9ecef;
            color: #495057;
            display: inline-block;
            margin: 0.25rem 0;
        }
        .btn-icon {
            padding: 0.25rem 0.5rem;
            margin-right: 0.25rem;
        }
        body {
            background-color: #f5f7f9;
            padding: 2rem 0;
        }
        .top-actions {
            margin-bottom: 2rem;
        }
        .help-box {
            background: #e7f5ff;
            border: 1px solid #b8daff;
            border-radius: 8px;
            padding: 1rem;
            margin: 1rem 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Page Header -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="h2 mb-0">Camera Management</h1>
            <div class="top-actions">
                <button class="btn btn-success me-2" onclick="window.location.href='/admin/migrate-cameras-from-detections'">
                    <i class="bi bi-arrow-repeat"></i> Sync from Detections
                </button>
                <button id="addCameraBtn" class="btn btn-primary">
                    <i class="bi bi-plus-lg"></i> Add Camera
                </button>
            </div>
        </div>

        <!-- Help Box -->
        <div class="help-box mb-4">
            <h6 class="mb-2"><i class="bi bi-info-circle"></i> Direction Mapping Guide</h6>
            <p class="mb-0">Specify which detection direction (from the ANPR system) means <b>ENTRY</b> or <b>EXIT</b> for this camera.<br>
            For example, if "towards" means a vehicle is entering, set Entry Direction to "towards". Common values: in, out, towards, away, left, right.</p>
        </div>

        <!-- Group cameras by site -->
        <% 
        const groupedCameras = {};
        cameras.forEach(camera => {
            const siteName = camera.carParkName || 'Unassigned';
            if (!groupedCameras[siteName]) {
                groupedCameras[siteName] = [];
            }
            groupedCameras[siteName].push(camera);
        });
        %>

        <% Object.entries(groupedCameras).sort().forEach(([siteName, siteCameras]) => { %>
            <div class="site-section">
                <div class="site-header">
                    <h3 class="h4 mb-0"><i class="bi bi-building"></i> <%= siteName %></h3>
                </div>
                
                <div class="row">
                    <% siteCameras.forEach(camera => { %>
                        <div class="col-md-6 mb-3">
                            <div class="camera-card">
                                <div class="camera-header">
                                    <h5 class="mb-0"><i class="bi bi-camera"></i> <%= camera.name %></h5>
                                </div>
                                <div class="camera-body">
                                    <div class="direction-badge">
                                        <i class="bi bi-box-arrow-in-right"></i> Entry: <%= camera.entryDirection || '-' %>
                                    </div>
                                    <div class="direction-badge ms-2">
                                        <i class="bi bi-box-arrow-right"></i> Exit: <%= camera.exitDirection || '-' %>
                                    </div>
                                </div>
                                <div class="camera-actions">
                                    <div class="btn-group">
                                        <% if (camera.admin_url) { %>
                                            <button class="btn btn-sm btn-outline-info open-admin-url" 
                                                    data-url="<%= camera.admin_url %>"
                                                    data-camera="<%= camera.name %>">
                                                <i class="bi bi-gear"></i> Admin
                                            </button>
                                        <% } %>
                                        <button class="btn btn-sm btn-outline-primary edit-camera" 
                                                data-camera='<%= JSON.stringify({
                                                    name: camera.name,
                                                    carParkId: camera.carParkId,
                                                    entryDirection: camera.entryDirection,
                                                    exitDirection: camera.exitDirection,
                                                    isEntryTrigger: camera.isEntryTrigger,
                                                    isExitTrigger: camera.isExitTrigger,
                                                    admin_url: camera.admin_url
                                                }) %>'>
                                            <i class="bi bi-pencil"></i> Edit
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger delete-camera" 
                                                data-id="<%= camera.name %>">
                                            <i class="bi bi-trash"></i> Delete
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        <% }); %>

        <!-- Add Camera Modal -->
        <div class="modal fade" id="addCameraModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Add Camera</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="addCameraForm">
                            <div class="mb-3">
                                <label class="form-label">Name</label>
                                <input type="text" class="form-control" name="name" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Car Park</label>
                                <select class="form-select" name="carParkId">
                                    <option value="">Select Car Park</option>
                                    <% carparks.forEach(carPark => { %>
                                        <option value="<%= carPark.siteId %>"><%= carPark.name %></option>
                                    <% }); %>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Entry Direction</label>
                                <input list="directionOptions" class="form-control" name="entryDirection" placeholder="e.g. towards" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Exit Direction</label>
                                <input list="directionOptions" class="form-control" name="exitDirection" placeholder="e.g. away">
                            </div>
                            <div class="mb-3">
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input" name="isEntryTrigger" id="isEntryTrigger">
                                    <label class="form-check-label" for="isEntryTrigger">Entry Trigger</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input" name="isExitTrigger" id="isExitTrigger">
                                    <label class="form-check-label" for="isExitTrigger">Exit Trigger</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Admin URL</label>
                                <input type="url" class="form-control" name="admin_url" placeholder="https://...">
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="saveCamera">Save</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Edit Camera Modal -->
        <div class="modal fade" id="editCameraModal" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Edit Camera</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <form id="editCameraForm">
                            <input type="hidden" name="id">
                            <div class="mb-3">
                                <label class="form-label">Name</label>
                                <input type="text" class="form-control" name="name" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Car Park</label>
                                <select class="form-select" name="carParkId">
                                    <option value="">Select Car Park</option>
                                    <% carparks.forEach(carPark => { %>
                                        <option value="<%= carPark.siteId %>"><%= carPark.name %></option>
                                    <% }); %>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Entry Direction</label>
                                <input list="directionOptions" class="form-control" name="entryDirection" placeholder="e.g. towards" required>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Exit Direction</label>
                                <input list="directionOptions" class="form-control" name="exitDirection" placeholder="e.g. away">
                            </div>
                            <div class="mb-3">
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input" name="isEntryTrigger" id="editIsEntryTrigger">
                                    <label class="form-check-label" for="editIsEntryTrigger">Entry Trigger</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <div class="form-check">
                                    <input type="checkbox" class="form-check-input" name="isExitTrigger" id="editIsExitTrigger">
                                    <label class="form-check-label" for="editIsExitTrigger">Exit Trigger</label>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Admin URL</label>
                                <input type="url" class="form-control" name="admin_url" placeholder="https://...">
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="button" class="btn btn-primary" id="updateCamera">Update</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Admin URL Modal -->
        <div class="modal fade" id="adminUrlModal" tabindex="-1">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Camera Admin Dashboard</h5>
                        <div>
                            <a id="openInNewPageBtn" href="#" target="_blank" class="btn btn-primary me-2">
                                <i class="bi bi-box-arrow-up-right"></i> Open in New Page
                            </a>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                    </div>
                    <div class="modal-body p-0">
                        <iframe id="adminUrlFrame" style="width: 100%; height: 80vh; border: none;"></iframe>
                    </div>
                </div>
            </div>
        </div>

        <datalist id="directionOptions">
            <option value="towards">
            <option value="away">
            <option value="in">
            <option value="out">
            <option value="left">
            <option value="right">
        </datalist>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/js/adminActions.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add Camera
            handleAdminAction({
                btnId: 'addCameraBtn',
                spinnerId: 'addCameraSpinner',
                resultId: 'addCameraResult',
                fetchOptions: {
                    url: '/admin/cameras/add',
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        name: document.getElementById('cameraName')?.value,
                        carParkId: document.getElementById('carParkId')?.value,
                        entryDirection: document.getElementById('entryDirection')?.value,
                        exitDirection: document.getElementById('exitDirection')?.value,
                        isEntryTrigger: document.getElementById('addCameraForm').querySelector('[name="isEntryTrigger"]').checked,
                        isExitTrigger: document.getElementById('addCameraForm').querySelector('[name="isExitTrigger"]').checked,
                        admin_url: document.getElementById('addCameraForm').querySelector('[name="admin_url"]').value
                    })
                },
                confirmMsg: 'Add this camera?',
                successMsg: 'Camera added.',
                reloadOnSuccess: true
            });

            // Edit Camera
            document.querySelectorAll('.edit-camera').forEach(button => {
                button.addEventListener('click', function() {
                    const camera = JSON.parse(this.dataset.camera);
                    const form = document.getElementById('editCameraForm');
                    
                    form.querySelector('[name="id"]').value = camera.id;
                    form.querySelector('[name="name"]').value = camera.name;
                    form.querySelector('[name="carParkId"]').value = camera.carParkId || '';
                    form.querySelector('[name="entryDirection"]').value = camera.entryDirection || '';
                    form.querySelector('[name="exitDirection"]').value = camera.exitDirection || '';
                    form.querySelector('[name="isEntryTrigger"]').checked = !!camera.isEntryTrigger;
                    form.querySelector('[name="isExitTrigger"]').checked = !!camera.isExitTrigger;
                    form.querySelector('[name="admin_url"]').value = camera.admin_url || '';
                    
                    // Store the original name in a data attribute
                    form.dataset.originalName = camera.name;
                    
                    new bootstrap.Modal(document.getElementById('editCameraModal')).show();
                });
            });

            // Update Camera
            document.getElementById('updateCamera').addEventListener('click', async function() {
                const form = document.getElementById('editCameraForm');
                const formData = new FormData(form);
                const data = Object.fromEntries(formData.entries());
                data.originalName = form.dataset.originalName;
                data.isEntryTrigger = form.querySelector('[name="isEntryTrigger"]').checked;
                data.isExitTrigger = form.querySelector('[name="isExitTrigger"]').checked;
                try {
                    const response = await fetch('/admin/cameras/edit', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    });

                    if (response.ok) {
                        window.location.reload();
                    } else {
                        alert('Error updating camera');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error updating camera');
                }
            });

            // Delete Camera
            document.querySelectorAll('.delete-camera').forEach(button => {
                button.addEventListener('click', async function() {
                    if (!confirm('Are you sure you want to delete this camera?')) {
                        return;
                    }

                    const id = this.dataset.id;
                    try {
                        const response = await fetch(`/admin/api/cameras/${id}`, {
                            method: 'DELETE'
                        });

                        if (!response.ok) {
                            const errorData = await response.json();
                            console.error('Server error:', errorData);
                            alert(`Error deleting camera: ${errorData.error || 'Unknown error'}`);
                            return;
                        }

                        window.location.reload();
                    } catch (error) {
                        console.error('Network error:', error);
                        alert('Network error while deleting camera');
                    }
                });
            });

            // Open Admin URL
            document.querySelectorAll('.open-admin-url').forEach(button => {
                button.addEventListener('click', function() {
                    const url = this.dataset.url;
                    const camera = this.dataset.camera;
                    const modal = new bootstrap.Modal(document.getElementById('adminUrlModal'));
                    document.getElementById('adminUrlFrame').src = url;
                    document.getElementById('openInNewPageBtn').href = url;
                    modal.show();
                });
            });
        });
    </script>
</body>
</html> 