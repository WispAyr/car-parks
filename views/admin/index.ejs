<style>
    .admin-header {
        font-size: 2.6rem;
        font-weight: 800;
        letter-spacing: 1px;
        margin-bottom: 18px;
        color: var(--text-main);
        text-align: center;
    }
    .admin-card-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(270px, 1fr));
        gap: 32px;
        margin-top: 24px;
    }
    .admin-card {
        background: var(--table-bg);
        border-radius: 18px;
        box-shadow: var(--shadow-main);
        padding: 32px 24px 28px 24px;
        display: flex;
        flex-direction: column;
        align-items: center;
        transition: box-shadow 0.18s, transform 0.18s;
        border: 1.5px solid var(--border-main);
        min-height: 220px;
        text-align: center;
    }
    .admin-card:hover {
        box-shadow: 0 8px 32px rgba(99,102,241,0.18);
        transform: translateY(-4px) scale(1.03);
        border-color: var(--badge-primary);
    }
    .admin-card-icon {
        font-size: 2.8rem;
        margin-bottom: 18px;
        color: var(--badge-primary);
    }
    .admin-card-title {
        font-size: 1.35rem;
        font-weight: 700;
        margin-bottom: 8px;
        color: var(--text-main);
    }
    .admin-card-desc {
        font-size: 1.05rem;
        color: var(--text-muted);
        margin-bottom: 18px;
    }
    @media (max-width: 700px) {
        .admin-header { font-size: 2rem; }
        .admin-card-grid { gap: 16px; }
        .admin-card { padding: 20px 10px; }
    }
</style>
<div class="container mt-4">
    <div class="admin-header">Admin Dashboard</div>
    <div class="admin-card-grid">
        <div class="admin-card">
            <div class="admin-card-icon"><i class="fa fa-warehouse"></i></div>
            <div class="admin-card-title">Car Parks Management</div>
            <div class="admin-card-desc">Manage car parks, their locations, and through-traffic rules.</div>
            <a href="/admin/carparks" class="btn btn-primary">Manage Car Parks</a>
        </div>
        <div class="admin-card">
            <div class="admin-card-icon"><i class="fa fa-video"></i></div>
            <div class="admin-card-title">Cameras Management</div>
            <div class="admin-card-desc">Configure cameras, their locations, and entry/exit directions.</div>
            <a href="/admin/cameras" class="btn btn-primary">Manage Cameras</a>
        </div>
        <div class="admin-card">
            <div class="admin-card-icon"><i class="fa fa-database"></i></div>
            <div class="admin-card-title">Migrations</div>
            <div class="admin-card-desc">Apply and manage database migrations.</div>
            <a href="/admin/migrations" class="btn btn-primary">Migrations</a>
        </div>
        <div class="admin-card">
            <div class="admin-card-icon"><i class="fa fa-sync-alt"></i></div>
            <div class="admin-card-title">Re-check All Events</div>
            <div class="admin-card-desc">Re-run whitelist/payment checks for all events and update their status.</div>
            <button id="recheckAllBtn" class="btn btn-warning">
                <span id="recheckAllSpinner" class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                <i class="fa fa-sync-alt"></i> Re-check All Events
            </button>
            <div id="recheckAllResult" class="alert alert-info mt-2 d-none"></div>
            <div id="recheckAllError" class="alert alert-danger mt-2 d-none"></div>
        </div>
        <div class="admin-card">
            <div class="admin-card-icon"><i class="bi bi-file-earmark-spreadsheet"></i></div>
            <div class="admin-card-title">Import Payments</div>
            <div class="admin-card-desc">Upload and import payment data from Matrix parking machines (Excel or CSV). Assign payments to a car park and match VRMs to events.</div>
            <a href="/admin/import-payments" class="btn btn-success"><i class="bi bi-upload"></i> Import Payments</a>
        </div>
        <div class="admin-card">
            <div class="admin-card-icon"><i class="bi bi-credit-card"></i></div>
            <div class="admin-card-title">Manage Payments</div>
            <div class="admin-card-desc">View, edit, bulk delete, and reassign payment records. Filter and search all payment data.</div>
            <a href="/admin/manage-payments" class="btn btn-primary"><i class="bi bi-credit-card"></i> Manage Payments</a>
        </div>
    </div>
    <div class="section-header mt-5 mb-3" style="font-size:1.2rem;font-weight:700;color:#6366f1;letter-spacing:1px;">System Actions</div>
    <div class="row g-3 mb-4">
        <div class="col-md-4">
            <button id="purgeEventsBtn" class="btn btn-danger w-100">
                <span id="purgeSpinner" class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                Purge All Parking Events
            </button>
            <div id="purgeResult" class="alert mt-2 d-none"></div>
        </div>
        <div class="col-md-4">
            <button id="resetFlagsBtn" class="btn btn-warning w-100">
                <span id="resetFlagsSpinner" class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                Reset Processed Flags
            </button>
            <div id="resetFlagsResult" class="alert mt-2 d-none"></div>
        </div>
        <div class="col-md-4">
            <button id="regenerateEventsBtn" class="btn btn-primary w-100">
                <span id="regenerateSpinner" class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                Re-check All Events
            </button>
            <div id="regenerateResult" class="alert mt-2 d-none"></div>
            <div class="form-check mt-2">
                <input class="form-check-input" type="checkbox" id="clearFlaggedEvents">
                <label class="form-check-label" for="clearFlaggedEvents">
                    Clear flagged events during regeneration
                </label>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4 mb-4">
            <div class="card shadow-sm h-100">
                <div class="card-body d-flex flex-column justify-content-between">
                    <h5 class="card-title">Console Log (Real-Time)</h5>
                    <p class="card-text">View the live server log output for debugging and monitoring.</p>
                    <a href="/admin/logs" class="btn btn-outline-primary mt-auto"><i class="bi bi-terminal"></i> View Console Log</a>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card h-100 border-danger">
                <div class="card-body d-flex flex-column align-items-center justify-content-center">
                    <i class="bi bi-exclamation-triangle display-4 text-danger mb-3"></i>
                    <h5 class="card-title">Unknown Events Breakdown</h5>
                    <p class="card-text text-center">View a breakdown of unknown events per site and camera to help diagnose detection issues.</p>
                    <a href="/admin/unknown-events" class="btn btn-danger mt-2">View Unknown Events</a>
                </div>
            </div>
        </div>
    </div>
    <script src="/js/adminActions.js"></script>
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        var btn = document.getElementById('recheckAllBtn');
        var spinner = document.getElementById('recheckAllSpinner');
        var resultDiv = document.getElementById('recheckAllResult');
        var errorDiv = document.getElementById('recheckAllError');
        if (btn) {
            btn.onclick = async function() {
                btn.disabled = true;
                spinner.classList.remove('d-none');
                resultDiv.classList.add('d-none');
                errorDiv.classList.add('d-none');
                resultDiv.textContent = '';
                errorDiv.textContent = '';
                try {
                    const res = await fetch('/admin/events/recheck-all', { method: 'POST' });
                    if (res.ok) {
                        const data = await res.json();
                        resultDiv.textContent = `Rechecked ${data.summary.total} events: ${data.summary.whitelisted} whitelisted, ${data.summary.paid} paid, ${data.summary.overstay} overstay, ${data.summary.unpaid} unpaid.`;
                        resultDiv.classList.remove('d-none');
                    } else {
                        const data = await res.json().catch(() => ({}));
                        errorDiv.textContent = data.error || 'Failed to re-check all events';
                        errorDiv.classList.remove('d-none');
                    }
                } catch (err) {
                    errorDiv.textContent = err.message || 'Network error';
                    errorDiv.classList.remove('d-none');
                } finally {
                    btn.disabled = false;
                    spinner.classList.add('d-none');
                }
            }
        }
    });
    // Purge All Parking Events
    handleAdminAction({
      btnId: 'purgeEventsBtn',
      spinnerId: 'purgeSpinner',
      resultId: 'purgeResult',
      fetchOptions: {
        url: '/admin/purge-events',
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
      },
      confirmMsg: 'Are you sure you want to permanently delete ALL parking events? This cannot be undone.',
      successMsg: 'All parking events have been purged.',
      reloadOnSuccess: true
    });
    // Reset Processed Flags
    handleAdminAction({
      btnId: 'resetFlagsBtn',
      spinnerId: 'resetFlagsSpinner',
      resultId: 'resetFlagsResult',
      fetchOptions: {
        url: '/api/reset-processed-flags',
        method: 'POST'
      },
      confirmMsg: 'Are you sure you want to reset all processed flags? This will cause all detections to be reprocessed.',
      successMsg: 'Processed flags have been reset. You can now regenerate events.'
    });
    // Regenerate Events (if present)
    handleAdminAction({
      btnId: 'regenerateEventsBtn',
      spinnerId: 'regenerateSpinner',
      resultId: 'regenerateResult',
      fetchOptions: {
        url: '/api/regenerate-events',
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ clearFlaggedEvents: document.getElementById('clearFlaggedEvents')?.checked })
      },
      confirmMsg: 'Are you sure you want to regenerate all events? This will clear existing events.',
      successMsg: 'Event generation started. This may take a few minutes.',
      reloadOnSuccess: true
    });
    </script>
</div> 