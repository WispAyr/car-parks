<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Admin Console Log</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        body { 
            background: #f5f5f5; 
            margin: 0;
            padding: 0;
            height: 100vh;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }
        .header {
            background: #fff;
            border-bottom: 1px solid #e5e7eb;
            padding: 1rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 2px 4px rgba(0,0,0,0.04);
        }
        .header h1 {
            font-size: 1.5rem;
            margin: 0;
            color: #1f2937;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        .header-controls {
            display: flex;
            gap: 1rem;
            align-items: center;
        }
        .log-container {
            flex: 1;
            background: #1a1a1a;
            color: #eee;
            padding: 1rem;
            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Consolas', monospace;
            font-size: 0.9rem;
            line-height: 1.5;
            overflow-y: auto;
            margin: 0;
            height: calc(100vh - 4rem);
        }
        .log-line { 
            padding: 0.15rem 0;
            white-space: pre-wrap;
            border-bottom: 1px solid #333;
        }
        .log-timestamp { 
            color: #888;
            margin-right: 8px;
            user-select: none;
        }
        .log-type-log { color: #eee; }
        .log-type-error { 
            color: #ff6b6b;
            background: rgba(255,107,107,0.1);
            border-bottom-color: #442;
        }
        .btn-control {
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            font-size: 0.875rem;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            cursor: pointer;
            border: 1px solid #e5e7eb;
            background: #fff;
            color: #374151;
            transition: all 0.2s;
        }
        .btn-control:hover {
            background: #f9fafb;
            border-color: #d1d5db;
        }
        .btn-control.active {
            background: #6366f1;
            color: #fff;
            border-color: #6366f1;
        }
        #autoScrollToggle.active {
            background: #22c55e;
            border-color: #22c55e;
        }
        .search-box {
            padding: 0.375rem 0.75rem;
            border-radius: 0.375rem;
            border: 1px solid #e5e7eb;
            font-size: 0.875rem;
            width: 200px;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>
            <i class="fas fa-terminal"></i>
            Admin Console Log
        </h1>
        <div class="header-controls">
            <input type="text" class="search-box" id="searchInput" placeholder="Search logs...">
            <button class="btn-control" id="clearLogsBtn">
                <i class="fas fa-trash-alt"></i>
                Clear
            </button>
            <button class="btn-control active" id="autoScrollToggle">
                <i class="fas fa-arrow-down"></i>
                Auto-scroll
            </button>
            <button class="btn-control" onclick="window.location.reload()">
                <i class="fas fa-sync-alt"></i>
                Refresh
            </button>
        </div>
    </div>
    <div id="logContainer" class="log-container">
        <% logs.forEach(function(log) { %>
            <div class="log-line log-type-<%= log.type %>">
                <span class="log-timestamp">[<%= log.timestamp %>]</span>
                <%= log.line %>
            </div>
        <% }) %>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        const logContainer = document.getElementById('logContainer');
        const autoScrollToggle = document.getElementById('autoScrollToggle');
        const clearLogsBtn = document.getElementById('clearLogsBtn');
        const searchInput = document.getElementById('searchInput');
        const socket = io();
        let autoScroll = true;

        function appendLog(log) {
            const div = document.createElement('div');
            div.className = 'log-line log-type-' + log.type;
            div.innerHTML = `<span class="log-timestamp">[${log.timestamp}]</span> ${log.line}`;
            
            // Apply search filter if active
            if (searchInput.value) {
                const searchTerm = searchInput.value.toLowerCase();
                if (!log.line.toLowerCase().includes(searchTerm)) {
                    div.style.display = 'none';
                }
            }
            
            logContainer.appendChild(div);
            if (autoScroll) {
                logContainer.scrollTop = logContainer.scrollHeight;
            }
        }

        socket.on('admin-log', function(log) {
            appendLog(log);
        });

        // Auto-scroll toggle
        autoScrollToggle.addEventListener('click', () => {
            autoScroll = !autoScroll;
            autoScrollToggle.classList.toggle('active');
            if (autoScroll) {
                logContainer.scrollTop = logContainer.scrollHeight;
            }
        });

        // Clear logs
        clearLogsBtn.addEventListener('click', () => {
            logContainer.innerHTML = '';
        });

        // Search functionality
        searchInput.addEventListener('input', () => {
            const searchTerm = searchInput.value.toLowerCase();
            const logLines = logContainer.getElementsByClassName('log-line');
            
            Array.from(logLines).forEach(line => {
                const text = line.textContent.toLowerCase();
                line.style.display = text.includes(searchTerm) ? '' : 'none';
            });
        });

        // Initial scroll to bottom
        logContainer.scrollTop = logContainer.scrollHeight;
    </script>
</body>
</html> 