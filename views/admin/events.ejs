<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Events Management - Admin</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        .action-card {
            transition: transform 0.2s;
        }
        .action-card:hover {
            transform: translateY(-5px);
        }
        .progress {
            height: 25px;
        }
        .status-badge {
            font-size: 0.9em;
            padding: 0.5em 1em;
        }
    </style>
</head>
<body>
    <%- include('../partials/admin_nav') %>
    
    <div class="container mt-4">
        <h1 class="mb-2">Events Management</h1>
        <p class="text-muted mb-4">Manage all parking events, regenerate or clear events, and review flagged/ambiguous cases. Use the navigation bar above to access different event views.</p>
        
        <!-- Status Section -->
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Current Status</h5>
                        <div id="statusContent">
                            <p>Total Events: <span id="totalEvents">Loading...</span></p>
                            <p>Last Regeneration: <span id="lastRegeneration">Loading...</span></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Actions Section -->
        <div class="row">
            <div class="col-md-6 mb-4">
                <div class="card action-card">
                    <div class="card-body">
                        <h5 class="card-title">Clear Events</h5>
                        <p class="card-text">This will remove all parking events from the database. This action cannot be undone.</p>
                        <button class="btn btn-danger" onclick="clearEvents()">
                            <i class="bi bi-trash"></i> Clear All Events
                        </button>
                    </div>
                </div>
            </div>
            
            <div class="col-md-6 mb-4">
                <div class="card action-card">
                    <div class="card-body">
                        <h5 class="card-title">Regenerate Events</h5>
                        <p class="card-text">Regenerate all parking events from existing detections.</p>
                        <div class="mb-3">
                            <label class="form-label">Date Range (Optional)</label>
                            <div class="row">
                                <div class="col">
                                    <input type="date" class="form-control" id="startDate">
                                </div>
                                <div class="col">
                                    <input type="date" class="form-control" id="endDate">
                                </div>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Car Park (Optional)</label>
                            <select class="form-select" id="carParkSelect">
                                <option value="">All Car Parks</option>
                                <% carparks.forEach(carpark => { %>
                                    <option value="<%= carpark.siteId %>"><%= carpark.name %></option>
                                <% }); %>
                            </select>
                        </div>
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" id="clearFlaggedCheckbox">
                            <label class="form-check-label" for="clearFlaggedCheckbox">
                                Also clear flagged events (ambiguous/unpaired) during regeneration
                            </label>
                        </div>
                        <button class="btn btn-primary" onclick="regenerateEvents()">
                            <i class="bi bi-arrow-clockwise"></i> Regenerate Events
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Progress Section -->
        <div class="row mt-4" id="progressSection" style="display: none;">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Progress</h5>
                        <div class="progress mb-3">
                            <div class="progress-bar progress-bar-striped progress-bar-animated" 
                                 role="progressbar" 
                                 style="width: 0%" 
                                 id="progressBar">0%</div>
                        </div>
                        <p id="progressStatus">Initializing...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Confirmation Modal -->
    <div class="modal fade" id="confirmationModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Action</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p id="modalMessage"></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="confirmButton">Confirm</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Load initial status
        document.addEventListener('DOMContentLoaded', function() {
            loadStatus();
        });

        function loadStatus() {
            fetch('/api/events/status')
                .then(response => response.json())
                .then(data => {
                    document.getElementById('totalEvents').textContent = data.totalEvents;
                    document.getElementById('lastRegeneration').textContent = data.lastRegeneration || 'Never';
                })
                .catch(error => {
                    console.error('Error loading status:', error);
                });
        }

        function showConfirmationModal(message, onConfirm) {
            const modal = new bootstrap.Modal(document.getElementById('confirmationModal'));
            document.getElementById('modalMessage').textContent = message;
            document.getElementById('confirmButton').onclick = function() {
                modal.hide();
                onConfirm();
            };
            modal.show();
        }

        function clearEvents() {
            showConfirmationModal(
                'Are you sure you want to clear all events? This action cannot be undone.',
                () => {
                    fetch('/admin/clear-events')
                        .then(response => response.text())
                        .then(result => {
                            alert(result);
                            loadStatus();
                        })
                        .catch(error => {
                            alert('Error: ' + error);
                        });
                }
            );
        }

        function regenerateEvents() {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            const carParkId = document.getElementById('carParkSelect').value;
            const clearFlagged = document.getElementById('clearFlaggedCheckbox').checked;

            const params = new URLSearchParams();
            if (startDate) params.append('startDate', startDate);
            if (endDate) params.append('endDate', endDate);
            if (carParkId) params.append('carParkId', carParkId);
            if (clearFlagged) params.append('clearFlagged', '1');

            showConfirmationModal(
                'Are you sure you want to regenerate events? This will clear existing events first' + (clearFlagged ? ' and also clear flagged events.' : '.'),
                () => {
                    document.getElementById('progressSection').style.display = 'block';
                    document.getElementById('progressBar').style.width = '0%';
                    document.getElementById('progressBar').textContent = '0%';
                    document.getElementById('progressStatus').textContent = 'Starting regeneration...';

                    fetch(`/admin/regenerate-events?${params.toString()}`)
                        .then(response => response.text())
                        .then(result => {
                            document.getElementById('progressBar').style.width = '100%';
                            document.getElementById('progressBar').textContent = '100%';
                            document.getElementById('progressStatus').textContent = 'Complete!';
                            setTimeout(() => {
                                document.getElementById('progressSection').style.display = 'none';
                            }, 2000);
                            loadStatus();
                            alert(result);
                        })
                        .catch(error => {
                            document.getElementById('progressStatus').textContent = 'Error: ' + error;
                            alert('Error: ' + error);
                        });
                }
            );
        }
    </script>
</body>
</html> 