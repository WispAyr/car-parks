<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Camera Status Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .camera-card {
            margin-bottom: 1rem;
        }
        .status-indicator {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 5px;
        }
        .status-active {
            background-color: #28a745;
        }
        .status-inactive {
            background-color: #dc3545;
        }
        .metrics {
            margin-top: 10px;
            font-size: 0.9rem;
        }
        .metrics span {
            display: inline-block;
            min-width: 120px;
        }
        .interval {
            color: #6366f1;
            font-weight: 500;
        }
        .thresholds {
            font-size: 0.8em;
            color: #888;
            margin-top: 6px;
        }
        .sparkline {
            margin-top: 10px;
            height: 28px;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <h1 class="mb-4">Camera Status Dashboard</h1>
        
        <div class="row">
            <% cameras.forEach(camera => { %>
                <div class="col-md-6 col-lg-4">
                    <div class="card camera-card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0">
                                <span class="status-indicator status-<%= camera.status %>"></span>
                                <%= camera.name %>
                            </h5>
                        </div>
                        <div class="card-body">
                            <p class="card-text">
                                <strong>Last Detection:</strong> <%= camera.lastDetection ? new Date(camera.lastDetection).toLocaleString() : 'Never' %><br>
                                <strong>Detection Count:</strong> <%= camera.detectionCount %><br>
                                <strong>Direction:</strong> <%= camera.direction %><br>
                                <strong>Entry Trigger:</strong> <%= camera.isEntryTrigger ? 'Yes' : 'No' %><br>
                                <strong>Exit Trigger:</strong> <%= camera.isExitTrigger ? 'Yes' : 'No' %><br>
                                <strong>Entry Direction:</strong> <%= camera.entryDirection %><br>
                                <strong>Car Park ID:</strong> <%= camera.carParkId || 'Not assigned' %>
                            </p>
                            
                            <div class="metrics">
                                <span><strong>Last Hour:</strong> <%= camera.lastHour %></span>
                                <span><strong>Last Day:</strong> <%= camera.lastDay %></span>
                                <span><strong>Last 30d:</strong> <%= camera.lastMonth %></span>
                            </div>
                            
                            <div class="metrics">
                                <span><strong>Day 24h:</strong> <%= camera.day24h %></span>
                                <span><strong>Night 24h:</strong> <%= camera.night24h %></span>
                            </div>
                            
                            <div class="metrics">
                                <span><strong>Day 30d:</strong> <%= camera.day30d %></span>
                                <span><strong>Night 30d:</strong> <%= camera.night30d %></span>
                            </div>
                            
                            <div class="metrics">
                                <span class="interval"><strong>Avg Interval:</strong> <%= camera.avgInterval ? camera.avgInterval.toFixed(1) + ' min' : 'N/A' %></span>
                            </div>
                            
                            <div class="thresholds">
                                <span>Green ≤ <%= Math.round(camera.greenLimit) %> min</span> | 
                                <span>Yellow ≤ <%= Math.round(camera.yellowLimit) %> min</span>
                            </div>
                            
                            <div class="sparkline">
                                <canvas width="120" height="28" data-points="<%= camera.sparkline.join(',') %>"></canvas>
                                <div style="font-size:0.9em;color:#888;text-align:right;">last 24h</div>
                            </div>
                        </div>
                    </div>
                </div>
            <% }); %>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Draw sparklines
            document.querySelectorAll('.sparkline canvas').forEach(canvas => {
                const ctx = canvas.getContext('2d');
                const points = canvas.dataset.points.split(',').map(Number);
                const w = canvas.width, h = canvas.height;
                const max = Math.max(...points, 1);
                
                ctx.clearRect(0, 0, w, h);
                ctx.strokeStyle = '#6366f1';
                ctx.lineWidth = 2;
                ctx.beginPath();
                
                points.forEach((v, i) => {
                    const x = i * (w / (points.length - 1));
                    const y = h - (v / max) * (h - 4) - 2;
                    if (i === 0) ctx.moveTo(x, y);
                    else ctx.lineTo(x, y);
                });
                ctx.stroke();
                
                // Draw dots
                ctx.fillStyle = '#6366f1';
                points.forEach((v, i) => {
                    const x = i * (w / (points.length - 1));
                    const y = h - (v / max) * (h - 4) - 2;
                    ctx.beginPath();
                    ctx.arc(x, y, 2, 0, 2 * Math.PI);
                    ctx.fill();
                });
            });
        });
    </script>
</body>
</html> 