<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ANPR Detections</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', Arial, sans-serif;
            margin: 0;
            background: linear-gradient(120deg, #f5f5f5 60%, #e0e7ff 100%);
        }
        .header {
            background: #fff;
            box-shadow: 0 2px 8px rgba(0,0,0,0.04);
            padding: 32px 0 16px 0;
            margin-bottom: 0;
            position: sticky;
            top: 0;
            z-index: 10;
        }
        h1 {
            color: #333;
            text-align: center;
            font-size: 2.5rem;
            font-weight: 700;
            letter-spacing: 1px;
            margin: 0;
        }
        .detections-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(340px, 1fr));
            gap: 32px;
            padding: 32px 5vw;
            max-width: 1400px;
            margin: 0 auto;
        }
        .detection-card {
            background: white;
            border-radius: 16px;
            padding: 20px 18px 18px 18px;
            box-shadow: 0 4px 16px rgba(0,0,0,0.08);
            transition: transform 0.15s, box-shadow 0.15s;
            display: flex;
            flex-direction: column;
            min-height: 340px;
        }
        .detection-card:hover {
            transform: translateY(-4px) scale(1.02);
            box-shadow: 0 8px 24px rgba(99,102,241,0.13);
        }
        .image-container {
            background: #f0f4fa;
            border-radius: 8px;
            padding: 8px;
            display: flex;
            gap: 10px;
            margin-bottom: 14px;
            justify-content: center;
        }
        .detection-image {
            border-radius: 8px;
            border: 1px solid #e0e0e0;
            box-shadow: 0 2px 8px rgba(0,0,0,0.04);
            width: 48%;
            height: 140px;
            object-fit: cover;
            background: #e5e7eb;
            transition: box-shadow 0.2s;
        }
        .detection-image:hover {
            box-shadow: 0 4px 16px rgba(99,102,241,0.18);
        }
        .detection-info {
            font-size: 15px;
            color: #333;
            margin-top: 2px;
        }
        .detection-info p {
            margin: 2px 0 6px 0;
        }
        .detection-info strong {
            color: #6366f1;
            font-weight: 600;
        }
        .pagination {
            text-align: center;
            margin: 32px 0 24px 0;
        }
        .pagination a, .pagination span {
            display: inline-block;
            padding: 8px 14px;
            margin: 0 2px;
            border-radius: 6px;
            background: #e0e7ff;
            color: #333;
            text-decoration: none;
            font-weight: 500;
            transition: background 0.2s, color 0.2s;
        }
        .pagination a:hover {
            background: #b4c6fc;
        }
        .pagination .active {
            background: #6366f1;
            color: white;
        }
        @media (max-width: 700px) {
            .detections-grid {
                grid-template-columns: 1fr;
                padding: 18px 2vw;
            }
            .detection-card {
                min-height: 0;
            }
        }
        .timezone-btn {
            position: absolute;
            top: 32px;
            right: 32px;
            padding: 6px 12px;
            border-radius: 6px;
            border: 1px solid #6366f1;
            background: #fff;
            color: #6366f1;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.2s;
        }
        .timezone-btn:hover {
            background: #6366f1;
            color: #fff;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>Real-time ANPR Detections</h1>
        <button id="timezoneToggle" class="timezone-btn" onclick="toggleTimezone()">
            Switch to GMT
        </button>
    </div>
    <div class="table-responsive">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>VRM</th>
                    <th>Time</th>
                    <th>Type</th>
                    <th>Direction</th>
                    <th>Confidence</th>
                    <th>Tag</th>
                    <th>Tag Confidence</th>
                    <th>Country</th>
                    <th>Camera</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% detections.forEach(detection => { %>
                    <tr>
                        <td><%= detection.id %></td>
                        <td><%= detection.VRM %></td>
                        <td><%= detection.timestamp %></td>
                        <td><%= detection.type %></td>
                        <td><%= detection.direction %></td>
                        <td><%= detection.confidence %></td>
                        <td><%= detection.tag %></td>
                        <td><%= detection.tagConfidence %></td>
                        <td><%= detection.country %></td>
                        <td><%= detection.cameraID %></td>
                        <td>
                            <a href="/image/<%= detection.id %>/1" target="_blank" class="btn btn-sm btn-primary">View Image</a>
                        </td>
                    </tr>
                <% }); %>
            </tbody>
        </table>
    </div>
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <% if (page > 1) { %>
                <li class="page-item">
                    <a class="page-link" href="?page=<%= page - 1 %>&siteId=<%= selectedCarPark %>">Previous</a>
                </li>
            <% } %>
            
            <% for(let i = 1; i <= totalPages; i++) { %>
                <li class="page-item <%= i === page ? 'active' : '' %>">
                    <a class="page-link" href="?page=<%= i %>&siteId=<%= selectedCarPark %>"><%= i %></a>
                </li>
            <% } %>
            
            <% if (page < totalPages) { %>
                <li class="page-item">
                    <a class="page-link" href="?page=<%= page + 1 %>&siteId=<%= selectedCarPark %>">Next</a>
                </li>
            <% } %>
        </ul>
    </nav>
    <!-- Modal for full-size image -->
    <div id="imageModal" style="display:none; position:fixed; z-index:1000; left:0; top:0; width:100vw; height:100vh; background:rgba(0,0,0,0.75); align-items:center; justify-content:center;">
        <span id="closeModal" style="position:absolute; top:32px; right:48px; font-size:2.5rem; color:#fff; cursor:pointer; font-weight:700;">&times;</span>
        <img id="modalImg" src="" alt="Full Size" style="max-width:90vw; max-height:80vh; border-radius:12px; box-shadow:0 8px 32px rgba(0,0,0,0.25); background:#fff; display:block; margin:auto;">
    </div>
    <script src="/js/utils.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.js-datetime').forEach(el => {
                const before = el.textContent;
                const after = formatDateTime(el.textContent);
                console.log('Datetime debug:', {before, after});
                el.textContent = after;
            });
        });
        function showModal(src) {
            var modal = document.getElementById('imageModal');
            var modalImg = document.getElementById('modalImg');
            modalImg.src = src;
            modal.style.display = 'flex';
        }
        document.getElementById('closeModal').onclick = function() {
            document.getElementById('imageModal').style.display = 'none';
            document.getElementById('modalImg').src = '';
        };
        // Close modal on click outside image
        document.getElementById('imageModal').onclick = function(e) {
            if (e.target === this) {
                this.style.display = 'none';
                document.getElementById('modalImg').src = '';
            }
        };
        // Optional: close modal on ESC key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                document.getElementById('imageModal').style.display = 'none';
                document.getElementById('modalImg').src = '';
            }
        });

        // --- Live update polling for new detections ---
        const grid = document.querySelector('.detections-grid');
        const timezoneToggle = document.getElementById('timezoneToggle');
        let knownIds = [];
        let currentDetections = [];
        
        function renderDetectionCard(detection, highlight=false) {
            const card = document.createElement('div');
            card.className = 'detection-card';
            if (highlight) card.style.boxShadow = '0 0 0 4px #6366f1, 0 4px 16px rgba(0,0,0,0.08)';
            card.innerHTML = `
                <div class="image-container">
                    <img src="/image/${detection.id}/1" alt="ANPR Detection 1" class="detection-image" loading="lazy"
                         onerror="this.onerror=null; this.src='/placeholder.jpg';" onclick="showModal('/image/${detection.id}/1')">
                    <img src="/image/${detection.id}/2" alt="ANPR Detection 2" class="detection-image" loading="lazy"
                         onerror="this.onerror=null; this.src='/placeholder.jpg';" onclick="showModal('/image/${detection.id}/2')">
                </div>
                <div class="detection-info">
                    <p><strong>ID:</strong> ${detection.id}</p>
                    ${Object.keys(detection).map(key => {
                        if (["id","image","image1","image2","updatedAt","createdById","updatedById","CarParkID","CameraIDLinked","instanceID"].includes(key)) return '';
                        if (key === 'timestamp' || key === 'createdAt') {
                            return `<p><strong>${key}:</strong> ${formatDateTime(detection[key])}</p>`;
                        }
                        return `<p><strong>${key}:</strong> ${detection[key] ?? ''}</p>`;
                    }).join('')}
                </div>
            `;
            return card;
        }

        // Make refreshTimes available globally
        window.refreshTimes = function() {
            // Re-render all detection cards
            const cards = grid.querySelectorAll('.detection-card');
            cards.forEach(card => {
                const id = card.querySelector('.detection-info p').textContent.split(':')[1].trim();
                const detection = currentDetections.find(d => d.id.toString() === id);
                if (detection) {
                    const newCard = renderDetectionCard(detection);
                    card.replaceWith(newCard);
                }
            });
            timezoneToggle.textContent = `Switch to ${useBST ? 'GMT' : 'BST'}`;
        };

        async function pollForNewDetections() {
            try {
                const res = await fetch('/api/detections');
                const data = await res.json();
                currentDetections = data;
                if (Array.isArray(data) && data.length > 0) {
                    const newOnes = data.filter(d => !knownIds.includes(d.id));
                    if (newOnes.length > 0) {
                        newOnes.reverse().forEach(detection => {
                            const card = renderDetectionCard(detection, true);
                            grid.insertBefore(card, grid.firstChild);
                            setTimeout(() => card.style.boxShadow = '', 2000);
                        });
                        knownIds = data.map(d => d.id).concat(knownIds).slice(0, 50);
                    }
                }
            } catch (e) { /* ignore errors */ }
        }
        setInterval(pollForNewDetections, 10000);
    </script>
</body>
</html>